classdef AOI < handle
    % AOIs identified in ImageStackViewer
    
    % Class of AOI generated by findAOI
    % 
    %
    
    properties
        % from findAOIs
        centroid
        sigma
        boundingBox
        imageMask
        
        % from integrateAOIs
        time_s
        timeSeries
        gallery
        
        % from fitAOI
        fit
        fitParam
        
        status = 1;
        
    end
    
    properties (Dependent)
        eventList
        dwellList
        pixelList
        sumImageMask
        maxImageMask
        avgImageMask
        minTimeSeriesValue
    end
    
    methods
        % constructor -----------------------------------------------------
        function obj = AOI(centroid, sigma, boundingBox, imageMask)
            % input is a structure from findAOIs?
            obj.centroid = centroid; 
            obj.sigma = sigma; 
            obj.boundingBox = boundingBox; 
            obj.imageMask = imageMask;
        end
        
        % Dependent properties --------------------------------------------
        function s = get.sumImageMask(obj)
            s = []; 
            if ~isempty(obj.imageMask)
                s = sum(obj.imageMask(:));
            end
        end
        function m = get.maxImageMask(obj)
            m = []; 
            if ~isempty(obj.imageMask)
                m = max(obj.imageMask(:));
            end
        end
        function a = get.avgImageMask(obj)
            a = []; 
            if ~isempty(obj.imageMask)
                a = mean(obj.imageMask(:));
            end
        end
        function pl = get.pixelList(obj)
            pl = []; 
            if ~isempty(obj.boundingBox)
                pl = boundingBoxToPixels(obj.boundingBox);
            end
        end
        function m = get.minTimeSeriesValue(obj)
            m = []; 
            if ~isempty(obj.timeSeries)
                m = min(obj.timeSeries);
            end
        end
        function e = get.eventList(obj)
            if ~isempty(obj.fit)
                e = findEvents(obj.fit.class);
            end
        end
        
        function viewAOI(obj, time_s)
            % launch AOIViewer
            if nargin < 2
                AOIViewer(obj);
                %figure; plot(obj.timeSeries);
            else
                figure; plot(time_s, obj.timeSeries, '-k');
            end
        end
        
        function setIdealizationParameters(obj, idealMethod)
            % select parameters based on method
            obj.fitParam = struct; 
            switch idealMethod
                case 'DISC'
                case 'vbFRET'
                case 'SKM'
                case 'PELT'
                case 'CP-Cluster'
                case 'Threshold'
            end
        end
        
        function fitAOI(obj)
            % switch method
            %             if isempty(obj.fitParam)
            %                 obj.setIdealizationParameters();
            %             end
            %             switch obj.fitParam.method
            %                 case 'DISC'
            %                 case 'vbFRET'
            %                 case 'SKM'
            %                 case 'PELT'
            %                 case 'CP-Cluster'
            %                 case 'Threshold'
            %             end
            f = runDISC(obj.timeSeries);
            
            % normalize last class valu to zero
            % runs twice; 
            m = min(f.class);
            if m > 0
                f.class = f.class-m; 
            end
            obj.fit = f; 
        end
        
        function manualAdjustState(obj, p)
            % p can be -1 or 1
            if ~isempty(obj.fit)
                k = size(obj.fit.components,1)+p;
                if k > 0 && k <= size(obj.fit.all_ideal,2)
                    [obj.fit.components,  obj.fit.ideal, obj.fit.class] = computeCenters(obj.timeSeries, obj.fit.all_ideal(:,k));
                end
            end
        end
        
        function clearIdealization(obj)
            obj.fit = [];
        end
        
    end
        
    
end